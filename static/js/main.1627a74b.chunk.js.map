{"version":3,"sources":["store/actionTypes.ts","store/rootReducer.ts","utils/storage.ts","store/index.ts","components/titleBar.tsx","components/searchBar.tsx","components/card/card.tsx","components/card/repoCard.tsx","store/actionCreators.ts","components/footer.tsx","components/alert.tsx","components/container.tsx","layout/bookmarksPage.tsx","components/spinner.tsx","components/avatar.tsx","components/card/userCard.tsx","components/pagination.tsx","utils/httpGet.ts","services/repos.ts","layout/userDiscover.tsx","services/users.ts","layout/discoverPage.tsx","app/App.tsx","serviceWorker.ts","index.tsx","assets/images/user-icon.png"],"names":["initialState","bmkById","repos","state","key","obj","localStorage","setItem","JSON","stringify","persistedState","valueAsString","getItem","parse","load","storage","store","createStore","action","type","actionTypes","id","payload","concat","bmkId","newName","bookmarksRenamed","displayName","filteredBookmarks","Object","entries","filter","toString","repoBookmarks","fromEntries","composeWithDevTools","subscribe","getState","Title","text","className","BackButton","to","title","NewButton","TitleBar","children","SearchBar","placeholder","onSearch","rest","searchField","React","useRef","useEffect","current","focus","role","onSubmit","event","preventDefault","form","FormData","target","get","name","ref","aria-label","onChange","value","BCard","Card","props","classNames","mapDispatchToProps","addBookmark","details","bookmarkTypes","removeBookmark","renameBookmark","connect","isBookmarked","data","useState","isEditingName","setIsEditingName","renameTextFieldRef","repoDisplayName","full_name","isBookmarkRenamed","label","onClick","variant","editButtonLabel","handleRename","style","width","defaultValue","href","html_url","rel","description","Button","stopPropagation","Footer","AlertBox","Alert","Container","BookmarksHeader","bookmarkCollection","search","setSearch","toLowerCase","includes","_","length","map","Spinner","animation","Avatar","src","isLoaded","setIsLoaded","hidden","display","alt","onLoad","defaultUserIcon","UserCard","login","avatar_url","Pagination","onNext","onPrev","page","disableNext","last","disablePrev","PageItem","as","disabled","active","getSearchParamFromLink","url","param","tmp","trim","URLSearchParams","substr","parseInt","parseLinkHeader","link","links","split","i","reverse","next","prev","first","options","axios","then","response","headers","getRepoByName","ownerName","repoName","params","per_page","getAllReposByName","q","getAllReposByUsername","userName","UserDiscover","useParams","show","setShow","repositories","setRepositories","setPage","history","useHistory","isLoading","setIsLoading","error","setError","isEmptyList","pageToRender","repositoryService","p","catch","finally","Modal","size","onHide","goBack","aria-labelledby","Header","closeButton","Body","minHeight","repo","message","getAllUsersByname","DiscoverPage","items","setItems","prevSearch","RepoCard","isFirstVisit","shouldShowAlert","alertText","alertType","timer","setTimeout","a","userService","fetchData","clearTimeout","DiscoverHeader","item","path","searchTypeDisplay","App","exact","component","BookmarksPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","module","exports"],"mappings":"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","file":"static/js/main.1627a74b.chunk.js","sourcesContent":["export default {\r\n\tADD: 'BOOKMARK_ADD',\r\n\tREMOVE: 'BOOKMARK_REMOVE',\r\n\tRENAME: 'BOOKMARK_RENAME'\r\n}","import actionTypes from \"./actionTypes\";\r\n\r\nconst initialState: BookmarkState = {\r\n\tbmkById: [],\r\n\trepos: {}\r\n};\r\n\r\nexport default function rootReducer(state: BookmarkState = initialState, action: BookmarkAction) {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.ADD:\r\n\t\t\tconst id = action.payload.id;\r\n\t\t\tconst bmkById = state.bmkById.concat(id);\r\n\t\t\tconst repos = {...state.repos, [id]: action.payload}\r\n\t\t\treturn { bmkById, repos };\r\n\t\t\r\n\t\tcase actionTypes.RENAME:\r\n\t\t\tconst { id: bmkId, newName } = action.payload;\r\n\t\t\tconst bookmarksRenamed = {\r\n\t\t\t\t...state.repos,\r\n\t\t\t\t[bmkId]: {...state.repos[bmkId], displayName: newName}\r\n\t\t\t};\r\n\t\t\treturn { ...state, repos: bookmarksRenamed }\r\n\r\n\t\tcase actionTypes.REMOVE:\r\n\t\t\tconst filteredBookmarks = Object\r\n\t\t\t\t.entries(state.repos)\r\n\t\t\t\t.filter(([key]) => key !== 'bmkById' && key !== action.payload.id.toString());\r\n\t\t\tconst repoBookmarks = Object.fromEntries(filteredBookmarks);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tbmkById: state.bmkById.filter(id => id !== action.payload.id),\r\n\t\t\t\trepos: repoBookmarks\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","const bookmarks = 'B';\r\n\r\nfunction load(key: string) {\r\n\tconst valueAsString = localStorage.getItem(key);\r\n\tif (valueAsString) {\r\n\t\treturn JSON.parse(valueAsString);\r\n\t}\r\n}\r\n\r\nfunction dump(key: string, obj: any) {\r\n\tlocalStorage.setItem(key, JSON.stringify(obj));\r\n}\r\n\r\nexport default {\r\n\tpersist(state: BookmarkState) {\r\n\t\tdump(bookmarks, state)\r\n\t},\r\n\r\n\tload() {\r\n\t\treturn load(bookmarks);\r\n\t}\r\n}","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootReducer from './rootReducer';\r\nimport storage from 'utils/storage';\r\n\r\nconst persistedState = storage.load();\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tpersistedState,\r\n\tcomposeWithDevTools()\r\n);\r\n\r\nstore.subscribe(() => {\r\n\tstorage.persist(store.getState())\r\n})\r\n\r\nexport default store;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport 'style/titleBar.css';\r\n\r\nexport function Title({text}: {text: string}) {\r\n\treturn <span className=\"titlebar-title\">{text}</span>\r\n}\r\n\r\nexport function BackButton() {\r\n\treturn <Link to=\"/\" className=\"titlebar-backbtn util--no-underline\" title=\"Go Back to Bookmarks\">{'<'}</Link>;\r\n}\r\n\r\nexport function NewButton() {\r\n\treturn <Link to=\"/discover\" className=\"addbmk-btn util--no-underline\">+ New</Link>\r\n}\r\n\r\nexport default function TitleBar({children}: {children: React.ReactNode}) {\r\n\treturn (\r\n\t\t<div className=\"titlebar\">\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\n\r\nimport 'style/searchBar.css';\r\n\r\ntype FormEntryValue = string | null;\r\n\r\ninterface SearchBarProps extends React.HTMLProps<HTMLInputElement> {\r\n\tonSearch: SearchCallback\r\n}\r\n\r\nexport default function SearchBar(\r\n\t{children, placeholder, onSearch, ...rest}: SearchBarProps\r\n) {\r\n\r\n\tconst searchField: React.MutableRefObject<HTMLInputElement | null> = React.useRef(null);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsearchField.current?.focus();\r\n\t}, []);\r\n\r\n\tfunction handleSearch(event: React.ChangeEvent<HTMLInputElement>) {\r\n\t\tconst {value} = event.target;\r\n\t\tonSearch('q', value);\r\n\t}\r\n\r\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>) {\r\n\t\tevent.preventDefault();\r\n\t\tconst form = new FormData(event.target as HTMLFormElement);\r\n\t\tonSearch('q', form.get('q') as FormEntryValue);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className=\"searchbar\" role=\"search\" onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"search\"\r\n\t\t\t\tname=\"q\"\r\n\t\t\t\tref={searchField}\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\taria-label={placeholder}\r\n\t\t\t\tonChange={handleSearch}\r\n\t\t\t\t{...rest} />\r\n\r\n\t\t\t{children}\r\n\r\n\t\t\t<button className=\"btn-plain btn-search\">\r\n\t\t\t\t<span role=\"img\" aria-label=\"Search\">🔍</span>\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n}","import React from 'react';\r\n// import { Card as BCard, CardProps } from 'react-bootstrap';\r\n\r\nfunction BCard({children, ...rest}: React.HTMLProps<HTMLDivElement>) {\r\n\treturn <div {...rest}>{children}</div>;\r\n}\r\n\r\nexport default function Card({\r\n\tchildren,\r\n\tclassName,\r\n\t...props\r\n}: React.HTMLProps<HTMLDivElement>) {\r\n\tconst classNames = `card ${className? className: ''}`;\r\n\treturn (\r\n\t\t<BCard {...props} className={classNames}>\r\n\t\t\t{children}\r\n\t\t</BCard>\r\n\t);\r\n}","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { connect } from 'react-redux';\r\nimport Card from './card';\r\n\r\nimport { addBookmark, removeBookmark, renameBookmark } from 'store/actionCreators';\r\n\r\nimport 'style/repoCard.css';\r\n\r\ntype RepoCardOwnProps = {\r\n\tdata: IRepository\r\n}\r\n\r\ntype RepoCardStateProps = {\r\n\tisBookmarked: boolean\r\n}\r\n\r\ntype RepoCardDispatchProps = {\r\n\taddBookmark: typeof addBookmark,\r\n\tremoveBookmark: typeof removeBookmark,\r\n\trenameBookmark: typeof renameBookmark\r\n}\r\n\r\ntype RepoCardProps = RepoCardOwnProps & RepoCardStateProps & RepoCardDispatchProps;\r\n\r\nfunction RepoCard({\r\n\tdata,\r\n\tisBookmarked,\r\n\taddBookmark,\r\n\tremoveBookmark,\r\n\trenameBookmark\r\n}: RepoCardProps) {\r\n\r\n\tconst [isEditingName, setIsEditingName] = React.useState(false);\r\n\tconst renameTextFieldRef: React.MutableRefObject<HTMLInputElement | null> = React.useRef(null);\r\n\r\n\tconst repoDisplayName = data.displayName || data.full_name;\r\n\tconst isBookmarkRenamed = data.displayName && data.displayName !== data.full_name;\r\n\r\n\tconst label = isBookmarked\r\n\t\t? 'Remove Bookmark'\r\n\t\t: 'Add bookmark';\r\n\tconst onClick = isBookmarked\r\n\t\t? () => removeBookmark(data.id)\r\n\t\t: () => addBookmark(data);\r\n\tconst variant = isBookmarked\r\n\t\t? 'danger'\r\n\t\t: 'primary';\r\n\t\r\n\tconst editButtonLabel = isEditingName\r\n\t\t? 'Cancel'\r\n\t\t: 'Rename';\r\n\t\r\n\tfunction handleEditToggle(event: React.MouseEvent<HTMLButtonElement>) {\r\n\t\tevent.stopPropagation();\r\n\t\tsetIsEditingName(current => !current);\r\n\t}\r\n\r\n\tfunction handleRename() {\r\n\t\trenameBookmark(data.id, renameTextFieldRef.current?.value || '');\r\n\t\tsetIsEditingName(false);\r\n\t}\r\n\r\n\tfunction handleSubmit(event: React.FormEvent<HTMLFormElement>) {\r\n\t\tevent.preventDefault();\r\n\t\thandleRename();\r\n\t}\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (isEditingName) {\r\n\t\t\trenameTextFieldRef.current?.focus();\r\n\t\t}\r\n\t}, [isEditingName])\r\n\t\r\n\treturn (\r\n\t\t<Card className=\"repo-card\">\r\n\t\t\t{isEditingName\r\n\t\t\t\t? (\r\n\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t<input style={{width: '100%'}} defaultValue={repoDisplayName} ref={renameTextFieldRef} />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t)\r\n\t\t\t\t: (\r\n\t\t\t\t\t<a href={data.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t\t\t<span className=\"title\">{repoDisplayName}</span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t  )\r\n\t\t\t}\r\n\r\n\t\t\t{isBookmarkRenamed && <small>{data.full_name}</small>}\r\n\r\n\t\t\t<p>{data.description}</p>\r\n\t\t\t<div className=\"mt-1\">\r\n\t\t\t\t{isEditingName && <Button variant=\"dark\" className=\"ml-1\" onClick={handleRename}>Set</Button>}\r\n\t\t\t\t{isBookmarked && <Button variant=\"dark\" className=\"ml-1\" onClick={handleEditToggle}>{editButtonLabel}</Button>}\r\n\t\t\t\t<Button variant={variant} className=\"ml-1 add-bmk-btn\" onClick={onClick}>{label}</Button>\r\n\t\t\t</div>\r\n\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (state: BookmarkState, props: RepoCardOwnProps) => ({\r\n\tisBookmarked: !!state.repos[props.data.id]\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n\taddBookmark,\r\n\tremoveBookmark,\r\n\trenameBookmark\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RepoCard)","import bookmarkTypes from './actionTypes';\r\n\r\nexport function addBookmark(details: IRepository) {\r\n\treturn {\r\n\t\ttype: bookmarkTypes.ADD,\r\n\t\tpayload: details\r\n\t}\r\n}\r\n\r\nexport function removeBookmark(id: string) {\r\n\treturn {\r\n\t\ttype: bookmarkTypes.REMOVE,\r\n\t\tpayload: {id}\r\n\t}\r\n}\r\n\r\nexport function renameBookmark(id: string, newName: string) {\r\n\treturn {\r\n\t\ttype: bookmarkTypes.RENAME,\r\n\t\tpayload: {\r\n\t\t\tid,\r\n\t\t\tnewName\r\n\t\t}\r\n\t}\r\n}","import React from 'react';\r\n\r\nimport 'style/footer.css';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer>\r\n\t\t\t<span>Github Bookmarks</span>\r\n\t\t\t<div>\r\n\t\t\t\t<a href=\"#repo\">Fork this repo</a>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t)\r\n}","import React from 'react';\r\n\r\nimport {Alert, AlertProps} from 'react-bootstrap';\r\n\r\nexport default function AlertBox({children, variant = 'primary', ...rest}: AlertProps) {\r\n\treturn (\r\n\t\t<Alert variant={variant} {...rest} >{children}</Alert>\r\n\t)\r\n}","import React from 'react';\r\n\r\nimport 'style/container.css';\r\n\r\nexport default function Container({children}: React.HTMLProps<HTMLDivElement>) {\r\n\treturn (\r\n\t\t<section className=\"container-wrapper\">\r\n\t\t\t{children}\r\n\t\t</section>\r\n\t)\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport TitleBar, {Title, NewButton} from 'components/titleBar';\r\nimport SearchBar from 'components/searchBar';\r\nimport RepoCard from 'components/card/repoCard';\r\nimport Footer from 'components/footer';\r\nimport AlertBox from 'components/alert';\r\nimport Container from 'components/container';\r\n\r\ntype StateProps = {\r\n\tbookmarkCollection: BookmarkState\r\n}\r\n\r\n\r\nfunction BookmarksPage({ bookmarkCollection }: StateProps) {\r\n\r\n\tconst [search, setSearch] = React.useState('');\r\n\tconst bmkById = search\r\n\t\t? bookmarkCollection\r\n\t\t\t.bmkById\r\n\t\t\t.filter(bmkId => (\r\n\t\t\t\tbookmarkCollection.repos[bmkId].displayName?.toLowerCase().includes(search) ||\r\n\t\t\t\tbookmarkCollection.repos[bmkId].name.toLowerCase().includes(search) ||\r\n\t\t\t\tbookmarkCollection.repos[bmkId].full_name.toLowerCase().includes(search)\r\n\t\t\t))\r\n\t\t: bookmarkCollection.bmkById;\r\n\r\n\tfunction handleSearch(_: any, search: string) {\r\n\t\tsetSearch(search.toLowerCase());\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<BookmarksHeader onSearch={handleSearch} />\r\n\t\t\t<Container>\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tbmkById.length === 0\r\n\t\t\t\t\t\t? <AlertBox>Bookmarks added from the Discover Page <Link to=\"/discover\">[+ New ]</Link> will be shown here</AlertBox>\r\n\t\t\t\t\t\t: bmkById.map(bmkId => <RepoCard key={bmkId} data={bookmarkCollection.repos[bmkId]} />)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t</Container>\r\n\t\t\t<Footer />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\ntype BookmarksHeaderProps = {\r\n\tonSearch: SearchCallback\r\n}\r\n\r\nfunction BookmarksHeader({onSearch}: BookmarksHeaderProps) {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<TitleBar>\r\n\t\t\t\t<Title text=\"Bookmarks\" />\r\n\t\t\t\t<NewButton />\r\n\t\t\t</TitleBar>\r\n\t\t\t<SearchBar placeholder=\"Search Bookmarks\" onSearch={onSearch} />\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state: BookmarkState) => ({\r\n\tbookmarkCollection: state\r\n})\r\n\r\nexport default connect(mapStateToProps)(BookmarksPage)","import React from 'react';\r\nimport BSpinner from 'react-bootstrap/Spinner';\r\n\r\nexport default function Spinner() {\r\n\treturn <BSpinner animation=\"border\" className=\"spinner-big\" />;\r\n}","import React from 'react';\r\n\r\nimport defaultUserIcon from 'assets/images/user-icon.png';\r\n\r\nexport default function Avatar({src}: React.HTMLProps<HTMLImageElement>) {\r\n\r\n\tconst [isLoaded, setIsLoaded] = React.useState(false);\r\n\r\n\tconst hidden = {display: 'none'};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<img alt=\"Avatar\" style={!isLoaded? hidden: {}} src={src} onLoad={() => setIsLoaded(true)} />\r\n\t\t\t<img alt=\"fallback avatar\" style={isLoaded? hidden: {}} src={defaultUserIcon} />\r\n\t\t</>\r\n\t)\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Card from './card';\r\nimport Avatar from 'components/avatar';\r\n\r\nimport 'style/userCard.css';\r\n\r\ntype UserCardProps = {\r\n\tdata: IUser\r\n}\r\n\r\nexport default function UserCard({data: {login, avatar_url}}: UserCardProps) {\r\n\t\r\n\t// console.log(repos_url, avatar_url);\r\n\treturn (\r\n\t\t<Link className=\"user-card-link\" to={`/discover/user/${login}`}>\r\n\t\t\t<Card className=\"user-card\">\r\n\t\t\t\t<h1>{login}</h1>\r\n\t\t\t\t<Avatar src={avatar_url} />\r\n\t\t\t</Card>\r\n\t\t</Link>\r\n\t);\r\n}","import React from 'react';\r\nimport BPagination from 'react-bootstrap/Pagination';\r\nimport PageItem from 'react-bootstrap/PageItem';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\ntype PaginationProps = {\r\n\tonNext(event: React.MouseEvent<HTMLElement>): void,\r\n\tonPrev(event: React.MouseEvent<HTMLElement>): void,\r\n\tpage: Page\r\n}\r\n\r\nexport default function Pagination({onNext, onPrev, page}: PaginationProps) {\r\n\r\n\tconst disableNext = page.current === page.last;\r\n\tconst disablePrev = page.current === 1;\r\n\tconst shouldPaginate = !disableNext || !disablePrev || null;\r\n\r\n\treturn shouldPaginate && (\r\n\t\t<BPagination className=\"app-pagination\">\r\n\t\t\t<PageItem as={Button} disabled={disablePrev} variant=\"secondary\" onClick={onPrev}>Prev</PageItem>\r\n\t\t\t<PageItem active>{page.current}</PageItem>\r\n\t\t\t<PageItem as={Button} disabled={disableNext} variant=\"secondary\" onClick={onNext}>Next</PageItem>\r\n\t\t</BPagination>\r\n\t)\r\n}","import axios, { AxiosRequestConfig } from 'axios';\r\n\r\nconst baseUrl = 'https://api.github.com';\r\n\r\nfunction getSearchParamFromLink(url: string, param = 'page') {\r\n\tlet tmp: string | null = url?.trim();\r\n\tif (tmp) {\r\n\t\ttmp = (new URLSearchParams(url.substr(1, url.length - 2))).get(param);\r\n\t\tif (tmp) {\r\n\t\t\treturn parseInt(tmp);\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n}\r\n\r\nfunction parseLinkHeader(link = '') {\r\n\tif (link === '')\r\n\t\treturn null;\r\n\r\n\tconst links = Object.fromEntries(link.split(',').map(i => i.split('; ').reverse()));\r\n\tlet next = getSearchParamFromLink(links[\"rel=\\\"next\\\"\"]);\r\n\tlet prev = getSearchParamFromLink(links[\"rel=\\\"prev\\\"\"]);\r\n\tlet first = getSearchParamFromLink(links[\"rel=\\\"first\\\"\"]);\r\n\tlet last = getSearchParamFromLink(links[\"rel=\\\"last\\\"\"]);\r\n\treturn {first, prev, next, last}\r\n}\r\n\r\nexport default function get(url: string, options?: AxiosRequestConfig) {\r\n\treturn axios\r\n\t\t.get(`${baseUrl}/${url}`, options)\r\n\t\t.then(response => ({data: response.data, links: parseLinkHeader(response.headers.link)}));\r\n}","import get from 'utils/httpGet';\r\n\r\nfunction getRepoByName(ownerName: string, repoName: string, page = 1) {\r\n\treturn get(`repos/${ownerName}/${repoName}`, {params: {page, per_page: 20}});\r\n}\r\n\r\nfunction getAllReposByName(repoName: string, page = 1) {\r\n\treturn get('search/repositories', {\r\n\t\tparams: {q: repoName, page, per_page: 20}\r\n\t})\r\n}\r\n\r\nfunction getAllReposByUsername(userName: string, page = 1) {\r\n\treturn get(`users/${userName}/repos`, {params: {page, per_page: 20}});\r\n}\r\n\r\nexport default {\r\n\tgetRepoByName,\r\n\tgetAllReposByName,\r\n\tgetAllReposByUsername\r\n}","import React from 'react';\r\nimport {Modal} from 'react-bootstrap';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport RepoCard from 'components/card/repoCard';\r\nimport Spinner from 'components/spinner';\r\nimport AlertBox from 'components/alert';\r\nimport Pagination from 'components/pagination';\r\n\r\nimport repositoryService from 'services/repos';\r\n\r\nexport default function UserDiscover() {\r\n\t// readonly string\r\n\tconst {userName}: {userName: Readonly<string>} = useParams();\r\n\tconst [show, setShow] = React.useState(!!userName);\r\n\tconst [repositories, setRepositories] = React.useState<IRepository[] | null>(null);\r\n\tconst [page, setPage] = React.useState<Page>({\r\n\t\tcurrent: 1,\r\n\t\tnext: 1,\r\n\t\tlast: 1\r\n\t});\r\n\tconst history = useHistory();\r\n\r\n\tconst [isLoading, setIsLoading] = React.useState(repositories === null);\r\n\tconst [error, setError] = React.useState<Error | null>(null);\r\n\tconst isEmptyList = !isLoading && repositories?.length === 0;\r\n\r\n\tconst pageToRender = page.current;\r\n\r\n\tfunction hanldeHide() {\r\n\t\tsetShow(false);\r\n\t\thistory.goBack();\r\n\t}\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetIsLoading(true);\r\n\t\tsetError(null)\r\n\t\trepositoryService\r\n\t\t\t.getAllReposByUsername(userName, pageToRender)\r\n\t\t\t.then(data => {\r\n\t\t\t\tsetRepositories(data.data);\r\n\t\t\t\tsetPage(p => ({...p, ...data.links}))\r\n\t\t\t})\r\n\t\t\t.catch(error => setError(error))\r\n\t\t\t.finally(() => setIsLoading(false))\r\n\t}, [userName, pageToRender]);\r\n\t\r\n\treturn (\r\n\t\t\r\n\t\t\t<Modal\r\n\t\t\t\tsize=\"lg\"\r\n\t\t\t\tshow={show}\r\n\t\t\t\tonHide={hanldeHide}\r\n\t\t\t\taria-labelledby=\"example-modal-sizes-title-lg\"\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title id=\"example-modal-sizes-title-lg\">\r\n\t\t\t\t\t\tGitHub Repositories of {userName}\r\n\t\t\t\t\t</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body style={{minHeight: '80vh'}}>\r\n\t\t\t\t\t{isLoading\r\n\t\t\t\t\t\t? <Spinner />\r\n\t\t\t\t\t\t: isEmptyList\r\n\t\t\t\t\t\t\t? <AlertBox>This user has no public Repositories</AlertBox>\r\n\t\t\t\t\t\t\t: (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{repositories?.map((repo: IRepository) => <RepoCard key={repo.id} data={repo} />)}\r\n\t\t\t\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\t\t\t\tpage={page}\r\n\t\t\t\t\t\t\t\t\t\tonNext={() => setPage(p => ({...p, current: p.current + 1}))}\r\n\t\t\t\t\t\t\t\t\t\tonPrev={() => setPage(p => ({...p, current: p.current - 1}))} />\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t{error && <AlertBox variant=\"danger\">{error.message}</AlertBox>}\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t)\r\n}","import get from 'utils/httpGet';\r\n\r\nfunction getAllUsersByname(name: string, page = 1) {\r\n\treturn get('search/users', {params: {q: name, page, per_page: 20}});\r\n}\r\n\r\nexport default {\r\n\tgetAllUsersByname\r\n}","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport Spinner from 'components/spinner';\r\nimport TitleBar, { Title, BackButton } from 'components/titleBar';\r\nimport AlertBox from 'components/alert';\r\nimport SearchBar from 'components/searchBar';\r\nimport Container from 'components/container';\r\nimport RepoCard from 'components/card/repoCard';\r\nimport UserCard from 'components/card/userCard';\r\nimport UserDiscover from 'layout/userDiscover';\r\nimport Pagination from 'components/pagination';\r\nimport Footer from 'components/footer';\r\n\r\nimport repositoryService from 'services/repos';\r\nimport userService from 'services/users';\r\n\r\ntype SearchObj = {\r\n\ttype: string,\r\n\tq: string\r\n}\r\n\r\nexport default function DiscoverPage() {\r\n\tconst [items, setItems] = React.useState<Items>({\r\n\t\ttype: 'repo',\r\n\t\tdata: null\r\n\t});\r\n\r\n\tconst [search, setSearch] = React.useState<SearchObj>({\r\n\t\ttype: 'repo',\r\n\t\tq: ''\r\n\t});\r\n\r\n\tconst [page, setPage] = React.useState<Page>({\r\n\t\tcurrent: 1,\r\n\t\tnext: 1,\r\n\t\tlast: 1\r\n\t});\r\n\r\n\tconst prevSearch = React.useRef({type: '', q: ''});\r\n\r\n\tconst [isLoading, setIsLoading] = React.useState(false);\r\n\tconst [error, setError] = React.useState<Error | null>(null);\r\n\r\n\tconst Card = items.type === 'repo'\r\n\t\t? RepoCard\r\n\t\t: UserCard;\r\n\t\r\n\tconst isEmptyList = items?.data?.length === 0;\r\n\tconst isFirstVisit = !isLoading && items.data === null;\r\n\tconst shouldShowAlert = error || isFirstVisit;\r\n\r\n\tconst alertText = (error?.message && `Error: ${error?.message}`) || 'Start by searching.';\r\n\tconst alertType = error?.message ? 'danger': 'primary';\r\n\r\n\tconst pageToRender = page.current;\r\n\r\n\tfunction handleSearch(name: string, value: string) {\r\n\t\tif (search.type !== name) {\r\n\t\t\tsetPage(p => ({...p, current: 1}));\r\n\t\t}\r\n\t\tsetSearch(search => ({...search, [name]: value}));\r\n\t}\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst timeToWait = pageToRender === 1? 900: 0;\r\n\t\tconst timer = setTimeout(() => {\r\n\r\n\t\t\tif (search.q === '')\r\n\t\t\t\treturn;\r\n\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\tasync function fetchData() {\r\n\t\t\t\tif (search.type === 'user') {\r\n\t\t\t\t\treturn userService.getAllUsersByname(search.q, pageToRender);\r\n\t\t\t\t}\r\n\t\t\t\treturn repositoryService.getAllReposByName(search.q, pageToRender);\r\n\t\t\t}\r\n\r\n\t\t\tfetchData()\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tsetItems({type: search.type, data: data.data.items});\r\n\t\t\t\t\tsetPage(p => ({...p, ...data.links}));\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => setError(error))\r\n\t\t\t\t.finally(() => {\r\n\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t\tprevSearch.current = search;\r\n\t\t\t\t})\r\n\t\t}, timeToWait);\r\n\t\treturn () => clearTimeout(timer);\r\n\t}, [search, pageToRender]);\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<DiscoverHeader search={search} onSearch={handleSearch} />\r\n\t\t\t<Container>\r\n\t\t\t\t{shouldShowAlert && <AlertBox variant={alertType}>{alertText}</AlertBox>}\r\n\r\n\t\t\t\t{isLoading\r\n\t\t\t\t\t? <Spinner />\r\n\t\t\t\t\t: isEmptyList\r\n\t\t\t\t\t\t?\t<AlertBox>No results found for \"{search.q}\".</AlertBox>\r\n\t\t\t\t\t\t: (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{items?.data?.map(item => <Card key={item.id} data={item} />)}\r\n\t\t\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\t\t\tpage={page}\r\n\t\t\t\t\t\t\t\t\tonNext={() => setPage(p => ({...p, current: p.current + 1}))}\r\n\t\t\t\t\t\t\t\t\tonPrev={() => setPage(p => ({...p, current: p.current - 1}))} />\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t}\r\n\r\n\t\t\t</Container>\r\n\t\t\t<Route path=\"/discover/user/:userName\">\r\n\t\t\t\t<UserDiscover />\r\n\t\t\t</Route>\r\n\t\t\t<Footer />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\ntype DiscoverHeaderProps = {\r\n\tsearch: SearchObj,\r\n\tonSearch: SearchCallback\r\n}\r\n\r\nfunction DiscoverHeader(\r\n\t{search, onSearch}: DiscoverHeaderProps\r\n) {\r\n\r\n\tconst searchTypeDisplay = search.type === 'repo'\r\n\t\t? 'Repositories'\r\n\t\t: 'Usernames';\r\n\r\n\tfunction handleSearchChange(event: React.ChangeEvent<HTMLSelectElement>) {\r\n\t\tconst {name, value} = event.target;\r\n\t\tonSearch(name, value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<TitleBar>\r\n\t\t\t\t<BackButton />\r\n\t\t\t\t<Title text=\"Discover\" />\r\n\t\t\t</TitleBar>\r\n\t\t\t<SearchBar placeholder={`Search GitHub for ${searchTypeDisplay}`} onSearch={onSearch}>\r\n\t\t\t\t<select name=\"type\" title=\"Search by Type\" defaultValue=\"repo\" onChange={handleSearchChange}>\r\n\t\t\t\t\t<option value=\"user\">Username</option>\r\n\t\t\t\t\t<option value=\"repo\">Repository</option>\r\n\t\t\t\t</select>\r\n\t\t\t</SearchBar>\r\n\t\t</header>\r\n\t)\r\n}","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Switch, Route, Redirect } from 'react-router';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport 'style/App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport store from 'store';\r\nimport BookmarksPage from 'layout/bookmarksPage';\r\nimport DiscoverPage from 'layout/discoverPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={BookmarksPage} />\r\n          <Route path=\"/discover\" component={DiscoverPage} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'style/index.css';\nimport App from 'app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/user-icon.f9f26790.png\";"],"sourceRoot":""}